registerPlugin({
    name: 'Digital Clock',
    version: '1.7',
    description: '4-line Digital Clock',
    author: 'Patryk Lesiecki <lostigeros@outlook.com>, JS-Port by Michael Friese <michael@sinusbot.com>',
    vars: {
        id1: {
            title: 'Channel for Line #1',
            type: 'channel'
        },
        id2: {
            title: 'Channel for Line #2',
            type: 'channel'
        },
        id3: {
            title: 'Channel for Line #3',
            type: 'channel'
        },
        id4: {
            title: 'Channel for Line #4',
            type: 'channel'
        },
		id5: {
            title: 'Channel for day, month and year',
            type: 'channel'
        },
		dateformat: {
			title: 'Date format',
			type: 'select',
			options: [
				'DD.MM.YYYY',
				'MM.DD.YYYY',
				'YYYY.MM.DD',
				'YYYY.DD.MM'
			]
		},
		interval: {
			title: 'Update interval',
			type: 'number',
			placeholder: '1'
		},
		style: {
			title: 'Font style',
			type: 'select',
			options: [
				'Style 1 (LosTigeros)',
				'Style 2 (kapabac)',
				'Style 3 (kapabac)',
				'Style 4 (kapabac)',
				'Style 5 (kapabac)',
				'Style 6 (kapabac)',
				'Style 7 (kapabac)',
				'Style 8 (kapabac)',
				'Style 9 (kapabac)',
				'Style 10 (kapabac)',
				'Style 11 (kapabac)',
				'Style 12 (kapabac)',
				'Style 13 (kapabac)',
				'Style 14 (kapabac)',
				'Style 15 (kapabac)'
			]
		},
		spaces: {
			title: 'Spacing',
			type: 'select',
			options: [
				'Style 1 (LosTigeros)',
				'Style 2 (Niggolo)',
				'Style 3 (kapabac)',
				'Style 4 (pix0wl)',
                'Style 5 (pix0wl)',
                'Style 6 (pix0wl)',
				'Style 7 (LosTigeros)',
				'Style 8 (LosTigeros)',
				'Style 9 (LosTigeros)',
				'Style 10 (LosTigeros)',
				'Style 11 (LosTigeros)'
			]
		},
		format: {
			title: 'Format',
			type: 'select',
			options: [
				'24h',
				'12h'
			]
		},
		digits: {
			title: 'Digits',
			type: 'select',
			options: [
				'1-digit (0:00)',
				'2-digits (00:00)'
			]
		},
		timezone: {
            title: 'Time zone',
            type: 'select',
            options: [
                'UTC-12:00',
                'UTC-11:00',
				'UTC-10:00',
				'UTC-09:30',
				'UTC-09:00',
				'UTC-08:00',
				'UTC-07:00',
				'UTC-06:00',
				'UTC-05:00',
				'UTC-04:30',
				'UTC-04:00',
				'UTC-03:30',
				'UTC-03:00',
				'UTC-02:00',
				'UTC-01:00',
				'UTC±00:00',
				'UTC+01:00',
				'UTC+02:00',
				'UTC+03:00',
				'UTC+03:30',
				'UTC+04:00',
				'UTC+04:30',
				'UTC+05:00',
				'UTC+05:30',
				'UTC+05:45',
				'UTC+06:00',
				'UTC+06:30',
				'UTC+07:00',
				'UTC+08:00',
				'UTC+08:30',
				'UTC+08:45',
				'UTC+09:00',
				'UTC+09:30',
				'UTC+10:00',
				'UTC+10:30',
				'UTC+11:00',
				'UTC+12:00',
				'UTC+12:45',
				'UTC+13:00',
				'UTC+14:00'
            ]
        }
    }
}, function(sinusbot, config) {
	if (!config || !config.id1 || !config.id2 || !config.id3 || !config.id4) return;
	
    if(config.style == 0) {
		var font = [
			['█▀▀▀█─', '─▄█─', '▄▀▀▀▄─', '▄▀▀▀▄─', '───▄█──', '█▀▀▀▀─', '█▀▀▀█─', '█▀▀▀█─', '▄▀▀▀▄─', '█▀▀▀█─', '────'],
			['█───█─', '▀─█─', '───▄▀─', '──▄▄█─', '─▄▀─█──', '█▄▄▄──', '█─────', '────█─', '▀▄▄▄▀─', '█▄▄▄█─', '─▀──'],
			['█───█─', '──█─', '─▄▀───', '────█─', '█▄▄▄█▄─', '────█─', '█▀▀▀█─', '────█─', '█───█─', '────█─', '────'],
			['█▄▄▄█─', '──█─', '█▄▄▄▄─', '▀▄▄▄▀─', '────█──', '▀▄▄▄▀─', '█▄▄▄█─', '────█─', '▀▄▄▄▀─', '█▄▄▄█─', '─▀──']
		];
	} else if(config.style == 1) {
		var font = [
            ['▄▀▀▀▄─', '─▄█─', '▄▀▀▀▄─', '▄▀▀▀▄─', '───▄█──', '█▀▀▀▀─', '▄▀▀▀▄─', '▀▀▀▀█─', '▄▀▀▀▄─', '▄▀▀▀▄─', '────'],
            ['█───█─', '▀─█─', '───▄▀─', '──▄▄▀─', '─▄▀─█──', '█▄▄▄──', '█▄▄▄──', '────█─', '▀▄▄▄▀─', '█───█─', '─▀──'],
            ['█───█─', '──█─', '─▄▀───', '────█─', '█▄▄▄█▄─', '────█─', '█───█─', '──▄▀──', '█───█─', '─▀▀▀█─', '────'],
            ['▀▄▄▄▀─', '──█─', '█▄▄▄▄─', '▀▄▄▄▀─', '────█──', '▀▄▄▄▀─', '▀▄▄▄▀─', '──█───', '▀▄▄▄▀─', '▀▄▄▄▀─', '─▀──']
        ];
	} else if(config.style == 2) {
		var font = [
            ['▄▀▀█▄─', '─▄█─', '▄▀▀█▄─', '▄▀▀█▄─', '───▄█──', '██▀▀▀─', '▄█▀▀▄─', '▀▀▀██─', '▄▀▀█▄─', '▄▀▀█▄─', '─▄──'],
            ['█──██─', '▀██─', '───█▀─', '──▄█▀─', '─▄▀██──', '██▄▄──', '██▄▄──', '───██─', '▀▄▄█▀─', '█──██─', '─▀──'],
            ['█──██─', '─██─', '─▄▀───', '───██─', '█▄▄██▄─', '───██─', '██──█─', '──▄█──', '█──██─', '─▀▀██─', '─▄──'],
            ['▀▄▄█▀─', '─██─', '██▄▄▄─', '▀▄▄█▀─', '───██──', '▀▄▄█▀─', '▀█▄▄▀─', '──██──', '▀▄▄█▀─', '▀▄▄█▀─', '─▀──']
        ];
	} else if(config.style == 3) {
		var font = [
            ['█▀▀▀█─', '─█─', '▀▀▀▀█─', '▀▀▀▀█─', '█───█─', '█▀▀▀▀─', '█▀▀▀▀─', '▀▀▀▀█─', '█▀▀▀█─', '█▀▀▀█─', '─▄──'],
            ['█──██─', '██─', '▄▄▄██─', '─▄▄██─', '█──██─', '██▄▄▄─', '██▄▄▄─', '───██─', '█▄▄██─', '█──██─', '─▀──'],
            ['█──██─', '██─', '██────', '───██─', '▀▀▀██─', '───██─', '██──█─', '───██─', '█──██─', '▀▀▀██─', '─▄──'],
            ['█▄▄██─', '██─', '██▄▄▄─', '▄▄▄██─', '───██─', '▄▄▄██─', '██▄▄█─', '───██─', '█▄▄██─', '▄▄▄██─', '─▀──']
        ];
	} else if(config.style == 4) {
		var font = [
            ['█▀▀▀█─', '▀█─', '▀▀▀▀█─', '▀▀▀▀█─', '█───█─', '█▀▀▀▀─', '█▀▀▀▀─', '▀▀▀▀█─', '█▀▀▀█─', '█▀▀▀█─', '────'],
            ['█───█─', '─█─', '▄▄▄▄█─', '─▄▄▄█─', '█───█─', '█▄▄▄▄─', '█▄▄▄▄─', '────█─', '█▄▄▄█─', '█───█─', '─▀──'],
            ['█───█─', '─█─', '█─────', '────█─', '▀▀▀▀█─', '────█─', '█───█─', '────█─', '█───█─', '▀▀▀▀█─', '────'],
            ['█▄▄▄█─', '─█─', '█▄▄▄▄─', '▄▄▄▄█─', '────█─', '▄▄▄▄█─', '█▄▄▄█─', '────█─', '█▄▄▄█─', '▄▄▄▄█─', '─▀──']
        ];
	} else if(config.style == 5) {
		var font = [
            ['█▀▀██─', '██─', '▀▀▀██─', '▀▀▀██─', '█──██─', '██▀▀▀─', '██▀▀▀─', '▀▀▀██─', '█▀▀██─', '█▀▀██─', '─▄──'],
            ['█──██─', '██─', '▄▄▄██─', '─▄▄██─', '█──██─', '██▄▄▄─', '██▄▄▄─', '───██─', '█▄▄██─', '█──██─', '─▀──'],
            ['█──██─', '██─', '██────', '───██─', '▀▀▀██─', '───██─', '██──█─', '───██─', '█──██─', '▀▀▀██─', '─▄──'],
            ['█▄▄██─', '██─', '██▄▄▄─', '▄▄▄██─', '───██─', '▄▄▄██─', '██▄▄█─', '───██─', '█▄▄██─', '▄▄▄██─', '─▀──']
        ];
	} else if(config.style == 6) {
		var font = [
            ['▄▀▀▀█─', '▄█─', '─▀▀▀█─', '─▀▀▀█─', '▄───█─', '▄▀▀▀▀─', '▄▀▀▀▀─', '▄▀▀▀█─', '▄▀▀▀█─', '▄▀▀▀█─', '────'],
            ['█───█─', '─█─', '▄▄▄▄█─', '─▄▄▄█─', '█───█─', '█▄▄▄▄─', '█▄▄▄▄─', '────█─', '█▄▄▄█─', '█───█─', '─▀──'],
            ['█───█─', '─█─', '█─────', '────█─', '▀▀▀▀█─', '────█─', '█───█─', '────█─', '█───█─', '▀▀▀▀█─', '────'],
            ['█▄▄▄▀─', '─█─', '█▄▄▄──', '▄▄▄▄▀─', '────█─', '▄▄▄▄▀─', '█▄▄▄▀─', '────█─', '█▄▄▄▀─', '▄▄▄▄▀─', '─▀──']
        ];
	} else if(config.style == 7) {
		var font = [
            ['▄▀▀██─', '▄█─', '─▀▀██─', '─▀▀██─', '▄──██─', '▄█▀▀▀─', '▄█▀▀▀─', '▄▀▀██─', '▄▀▀██─', '▄▀▀██─', '─▄──'],
            ['█──██─', '██─', '▄▄▄██─', '─▄▄██─', '█──██─', '██▄▄▄─', '██▄▄▄─', '───██─', '█▄▄██─', '█──██─', '─▀──'],
            ['█──██─', '██─', '██────', '───██─', '▀▀▀██─', '───██─', '██──█─', '───██─', '█──██─', '▀▀▀██─', '─▄──'],
            ['█▄▄█▀─', '██─', '██▄▄──', '▄▄▄█▀─', '───██─', '▄▄▄█▀─', '██▄▄▀─', '───██─', '█▄▄█▀─', '▄▄▄█▀─', '─▀──']
        ];
	} else if(config.style == 8) {
		var font = [
            ['▄▀▀▀▄─', '─▄█─', '▄▀▀▀▄─', '▄▀▀▀▄─', '───▄█──', '█▀▀▀▀─', '▄▀▀▀▄─', '▀▀▀▀█─', '▄▀▀▀▄─', '▄▀▀▀▄─', '────'],
            ['█───█─', '▀─█─', '───▄▀─', '──▄▄▀─', '─▄▀─█──', '▀▀▀▀▄─', '█▄▄▄──', '────█─', '▀▄▄▄▀─', '▀▄▄▄█─', '─▀──'],
            ['█───█─', '──█─', '─▄▀───', '▄───█─', '▀▀▀▀█▀─', '▄───█─', '█───█─', '──▄▀──', '█───█─', '▄───█─', '─▄──'],
            ['─▀▀▀──', '──▀─', '▀▀▀▀▀─', '─▀▀▀──', '────▀──', '─▀▀▀──', '─▀▀▀──', '──▀───', '─▀▀▀──', '─▀▀▀──', '────']
        ];
	} else if(config.style == 9) {
		var font = [
            ['▄▀▀█▄─', '─▄█─', '▄▀▀█▄─', '▄▀▀█▄─', '───▄█──', '██▀▀▀─', '▄█▀▀▄─', '▀▀▀██─', '▄▀▀█▄─', '▄▀▀█▄─', '─▄──'],
            ['█──██─', '▀██─', '───█▀─', '──▄█▀─', '─▄▀██──', '▀▀▀█▄─', '██▄▄──', '───██─', '▀▄▄█▀─', '▀▄▄██─', '─▀──'],
            ['█──██─', '─██─', '─▄█───', '▄──██─', '▀▀▀██▀─', '▄──██─', '██──█─', '──▄█──', '█──██─', '▄──██─', '─▄──'],
            ['─▀▀▀──', '─▀▀─', '▀▀▀▀▀─', '─▀▀▀──', '───▀▀──', '─▀▀▀──', '─▀▀▀──', '──▀▀──', '─▀▀▀──', '─▀▀▀──', '─▀──']
        ];
	} else if(config.style == 10) {
		var font = [
            ['█▀▀▀█─', '─█─', '▀▀▀▀█─', '▀▀▀▀█─', '█───█─', '█▀▀▀▀─', '█▀▀▀▀─', '▀▀▀▀█─', '█▀▀▀█─', '█▀▀▀█─', '─▄──'],
            ['█──██─', '██─', '▄▄▄██─', '─▄▄██─', '█▄▄██─', '██▄▄▄─', '██▄▄▄─', '───██─', '█▄▄██─', '█▄▄██─', '─▀──'],
            ['█──██─', '██─', '██────', '───██─', '───██─', '───██─', '██──█─', '───██─', '█──██─', '───██─', '─▄──'],
            ['▀▀▀▀▀─', '▀▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '───▀▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '───▀▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '─▀──']
        ];
	} else if(config.style == 11) {
		var font = [
            ['█▀▀▀█─', '▀█─', '▀▀▀▀█─', '▀▀▀▀█─', '█───█─', '█▀▀▀▀─', '█▀▀▀▀─', '▀▀▀▀█─', '█▀▀▀█─', '█▀▀▀█─', '────'],
            ['█───█─', '─█─', '▄▄▄▄█─', '─▄▄▄█─', '█▄▄▄█─', '█▄▄▄▄─', '█▄▄▄▄─', '────█─', '█▄▄▄█─', '█▄▄▄█─', '─▀──'],
            ['█───█─', '─█─', '█─────', '────█─', '────█─', '────█─', '█───█─', '────█─', '█───█─', '────█─', '─▄──'],
            ['▀▀▀▀▀─', '─▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '────▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '────▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '────']
        ];
	} else if(config.style == 12) {
		var font = [
            ['█▀▀██─', '██─', '▀▀▀██─', '▀▀▀██─', '█──██─', '██▀▀▀─', '██▀▀▀─', '▀▀▀██─', '█▀▀██─', '█▀▀██─', '─▄──'],
            ['█──██─', '██─', '▄▄▄██─', '─▄▄██─', '█▄▄██─', '██▄▄▄─', '██▄▄▄─', '───██─', '█▄▄██─', '█▄▄██─', '─▀──'],
            ['█──██─', '██─', '██────', '───██─', '───██─', '───██─', '██──█─', '───██─', '█──██─', '───██─', '─▄──'],
            ['▀▀▀▀▀─', '▀▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '───▀▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '───▀▀─', '▀▀▀▀▀─', '▀▀▀▀▀─', '─▀──']
        ];
	} else if(config.style == 13) {
		var font = [
            ['▄▀▀▀█─', '─█─', '─▀▀▀█─', '─▀▀▀█─', '▄───█─', '▄▀▀▀▀─', '▄▀▀▀▀─', '▄▀▀▀█─', '▄▀▀▀█─', '▄▀▀▀█─', '────'],
            ['█───█─', '─█─', '▄▄▄▄█─', '─▄▄▄█─', '█▄▄▄█─', '█▄▄▄▄─', '█▄▄▄▄─', '────█─', '█▄▄▄█─', '█▄▄▄█─', '─▀──'],
            ['█───█─', '─█─', '█─────', '────█─', '────█─', '────█─', '█───█─', '────█─', '█───█─', '────█─', '─▄──'],
            ['▀▀▀▀──', '─▀─', '▀▀▀▀──', '▀▀▀▀──', '────▀─', '▀▀▀▀──', '▀▀▀▀──', '────▀─', '▀▀▀▀──', '▀▀▀▀──', '────']
        ];
	} else if(config.style == 14) {
		var font = [
            ['▄▀▀██─', '▄█─', '─▀▀██─', '─▀▀██─', '▄──██─', '▄█▀▀▀─', '▄█▀▀▀─', '▄▀▀██─', '▄▀▀██─', '▄▀▀██─', '─▄──'],
            ['█──██─', '██─', '▄▄▄██─', '─▄▄██─', '█▄▄██─', '██▄▄▄─', '██▄▄▄─', '───██─', '█▄▄██─', '█▄▄██─', '─▀──'],
            ['█──██─', '██─', '██────', '───██─', '───██─', '───██─', '██──█─', '───██─', '█──██─', '───██─', '─▄──'],
            ['▀▀▀▀──', '▀▀─', '▀▀▀▀──', '▀▀▀▀──', '───▀▀─', '▀▀▀▀──', '▀▀▀▀──', '───▀▀─', '▀▀▀▀──', '▀▀▀▀──', '─▀──']
        ];
	}
	
	var inter = 1;
	if(config.interval) {
		inter = config.interval;
	}
	
	var tz = [-12,-11,-10,-9.5,-9,-8,-7,-6,-5,-4.5,-4,-3.5,-3,-2,-1,0,1,2,3,3.5,4,4.5,5,5.5,5.75,6,6.5,7,8,8.5,8.75,9,9.5,10,10.5,11,12,12.75,13,14];
    var old = 0;
	var data = 0;
	
	setInterval(function() {
		var now = new Date();
		if (now.getMinutes() != old) {
            old = now.getMinutes();
			updateDate();
            updateClock();
        }
	}, inter * 1000);

	function updateDate() {
		if(config.id5) {
			var nonutc = new Date();
			if(data != nonutc.getDate()) {
				data = nonutc.getDate();
				var utc = nonutc.getTime() + (nonutc.getTimezoneOffset() * 60000);
				var time = new Date(utc + (3600000*tz[config.timezone]));
				var ddd = "DD";
				var mmm = "MM";
				var yyyy = "YYYY";
				
				if(time.getMonth() <= 8 && config.digits == 1) {
					mmm = "0" + (time.getMonth() + 1);
				} else {
					mmm = (time.getMonth() + 1);
				}
				
				if(time.getDate() <= 9 && config.digits == 1) {
					ddd = "0" + time.getDate();
				} else {
					ddd = time.getDate();
				}
				
				yyyy = time.getFullYear();
				
				var czas = "[cspacer]";
	
				if(config.dateformat == 0) { //DD.MM.YYYY
					czas += ddd + "." + mmm + "." + yyyy;
				} else if(config.dateformat == 1) { //MM.DD.YYYY
					czas += mmm + "." + ddd + "." + yyyy;
				} else if(config.dateformat == 2) { //YYYY.MM.DD
					czas += yyyy + "." + mmm + "." + ddd;
				} else if(config.dateformat == 3) { //YYYY.DD.MM
					czas += yyyy + "." + ddd + "." + mmm;
				}
				
				sinusbot.channelUpdate(parseInt(config.id5, 10), { name: czas });
			}
		}
	};
	updateDate();
	
    function updateClock() {
		var nonutc = new Date();
        var utc = nonutc.getTime() + (nonutc.getTimezoneOffset() * 60000);
		var time = new Date(utc + (3600000*tz[config.timezone]));
		var hours = 0;
        if(config.format == 0) {
			hours = time.getHours();
		} else if (config.format == 1) {
			hours = time.getHours() % 12 || 12;
		}
        var minutes = time.getMinutes();
        var lines = ['', '', '', ''];
        for (var i = 0; i < 4; i++) {
			lines[i] = '[cspacer]─';
            if (hours >= 10) {
                lines[i] += font[i][Math.floor(hours / 10)];
            } else {
				if(config.digits == 1) {
					lines[i] += font[i][0];
				}
			}
            lines[i] += font[i][hours % 10];
            lines[i] += font[i][10]; // :
            lines[i] += font[i][Math.floor(minutes / 10)];
            lines[i] += font[i][minutes % 10];
			if (config.spaces == 1) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '░');
			} else if (config.spaces == 2) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '═');
			} else if (config.spaces == 3) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '~');
			} else if (config.spaces == 4) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '+');
			} else if (config.spaces == 5) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '=');
			} else if (config.spaces == 6) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '⠿');
			} else if (config.spaces == 7) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '⠶');
			} else if (config.spaces == 8) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '⠀');
			} else if (config.spaces == 9) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), '⣿');
			} else if (config.spaces == 10) {
				lines[i] = lines[i].replace(new RegExp("─", "g"), 'Ⳮ');
			} else if (config.spaces == 11) {
				//lines[i] = lines[i].replace(new RegExp("─", "g"), ' ');
			}
        }

        sinusbot.channelUpdate(parseInt(config.id1, 10), { name: lines[0] });
        sinusbot.channelUpdate(parseInt(config.id2, 10), { name: lines[1] });
        sinusbot.channelUpdate(parseInt(config.id3, 10), { name: lines[2] });
        sinusbot.channelUpdate(parseInt(config.id4, 10), { name: lines[3] });
    };
    updateClock();
});